from confluent_kafka import Consumer, KafkaException
import sys

conf = {
    'bootstrap.servers': "localhost:9092",
    'group.id': "my_consumer_group",
    'auto.offset.reset': 'earliest'
}

def consume_last_message(topic):
    consumer = Consumer(conf)
    consumer.subscribe([topic])

    try:
        # Seek to end of partition
        partitions = consumer.assignment()
        consumer.seek(partitions[0], offset=consumer.get_watermark_offsets(partitions[0])[1])

        # Consume last message
        msg = consumer.poll(timeout=1.0)
        if msg is not None and not msg.error():
            print('Last Message: {}'.format(msg.value().decode('utf-8')))
    except KafkaException as e:
        print("KafkaException: {}".format(e))
    except KeyboardInterrupt:
        sys.exit("Consumer interrupted")

    finally:
        consumer.close()

if __name__ == '__main__':
    topic = 'my_topic'
    consume_last_message(topic)
