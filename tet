from elasticsearch import Elasticsearch
from datetime import datetime
import pandas as pd

# Connect to the Elasticsearch cluster
es = Elasticsearch(['http://localhost:9200'])

def get_latest_records(index_name, keyword):
    # Define the search query to find records with the keyword and sort them by timestamp
    query = {
        "query": {
            "match": {
                "content": keyword
            }
        },
        "sort": [
            {
                "timestamp": {
                    "order": "desc"
                }
            }
        ],
        "size": 10  # Adjust the size as needed
    }

    # Execute the search query
    response = es.search(index=index_name, body=query)

    # Extract the records from the response
    records = response['hits']['hits']
    return records

def expand_json_columns(df):
    new_columns = {}

    for column in df.columns:
        # Check if the column contains nested JSON objects
        if df[column].apply(lambda x: isinstance(x, dict)).any():
            # Extract all unique keys from the JSON objects in this column
            all_keys = set()
            for json_obj in df[column]:
                if isinstance(json_obj, dict):
                    all_keys.update(json_obj.keys())

            # Create new columns for each key
            for key in all_keys:
                new_column_name = f"{column}.{key}"
                new_columns[new_column_name] = df[column].apply(lambda x: x.get(key) if isinstance(x, dict) else None)

    # Add new columns to DataFrame
    for new_col, new_values in new_columns.items():
        df[new_col] = new_values

    # Drop the original JSON columns that were expanded
    df.drop(columns=[col for col in df.columns if col in new_columns.keys()], inplace=True)

    return df

# Define your index name and keyword
index_name = "your_index_name"
keyword = "xxxx"

# Get the latest records
latest_records = get_latest_records(index_name, keyword)

# Extract the source data from the records
data = [record['_source'] for record in latest_records]

# Create a DataFrame from the data
df = pd.DataFrame(data)

# Expand JSON columns
df_expanded = expand_json_columns(df)

# Save the expanded DataFrame to a CSV file
csv_filename = f'latest_records_{datetime.now().strftime("%Y%m%d%H%M%S")}.csv'
df_expanded.to_csv(csv_filename, index=False)

print(f"Latest records saved to {csv_filename}")
