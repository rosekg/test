import requests
import csv
import xml.etree.ElementTree as ET

# Rundeck API endpoint and authentication details
rundeck_url = "http://your-rundeck-instance/api/32"
api_token = "your-api-token"

# Headers for API requests
headers = {
    "Content-Type": "application/json",
    "X-Rundeck-Auth-Token": api_token
}

# Function to retrieve job information from Rundeck
def get_job_info():
    # API endpoint for job listing
    job_list_url = f"{rundeck_url}/projects/YOUR_PROJECT_NAME/jobs"

    try:
        response = requests.get(job_list_url, headers=headers)
        if response.status_code == 200:
            job_data = response.text

            # Parse XML data
            root = ET.fromstring(job_data)
            job_info = []

            for job in root.findall(".//job"):
                job_name = job.find("name").text.strip()
                job_description = job.find("description").text.strip()
                job_run_time = job.find("averageDuration").text.strip()

                # Get node names
                job_nodes = job.findall(".//node")
                nodes = [node.text.strip() for node in job_nodes]

                job_info.append([job_name, job_description, job_run_time, nodes])

            # Save job info as CSV
            with open("job_info.csv", mode="w", newline="") as file:
                writer = csv.writer(file)
                writer.writerow(["Job Name", "Job Description", "Run Time", "Nodes"])
                writer.writerows(job_info)

            print("Job information saved as job_info.csv")
        else:
            print(f"Error: {response.status_code} - {response.text}")
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")

# Call the function to retrieve job information and save as CSV
get_job_info()
