from confluent_kafka import Consumer, KafkaException
import sys

conf = {
    'bootstrap.servers': "localhost:9092",
    'group.id': "my_consumer_group",
    'auto.offset.reset': 'earliest'
}

def consume_messages(topic):
    consumer = Consumer(conf)
    consumer.subscribe([topic])

    try:
        while True:
            msg = consumer.poll(timeout=1.0)
            if msg is None:
                continue
            if msg.error():
                if msg.error().code() == KafkaError._PARTITION_EOF:
                    # End of partition, the message is consumed
                    continue
                else:
                    # Handle other errors
                    print("Error: {}".format(msg.error()))
                    break

            # Print the message value
            print('Message: {}'.format(msg.value().decode('utf-8')))
    except KeyboardInterrupt:
        sys.exit("Consumer interrupted")

    finally:
        consumer.close()

if __name__ == '__main__':
    topic = 'my_topic'
    consume_messages(topic)
