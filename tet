from confluent_kafka import Consumer, KafkaException, OFFSET_END

def create_consumer(config, topic):
    consumer = Consumer(config)
    consumer.subscribe([topic], on_assign=on_assign)
    return consumer

def on_assign(consumer, partitions):
    for partition in partitions:
        partition.offset = OFFSET_END
    consumer.assign(partitions)

def consume_latest_messages(consumer, num_messages=10):
    messages = []
    while len(messages) < num_messages:
        msg = consumer.poll(timeout=1.0)
        if msg is None:
            continue
        if msg.error():
            if msg.error().code() == KafkaException._PARTITION_EOF:
                continue
            else:
                raise KafkaException(msg.error())
        messages.append(msg.value().decode('utf-8'))
    return messages

if __name__ == "__main__":
    config = {
        'bootstrap.servers': 'your_broker',
        'group.id': 'your_group',
        'auto.offset.reset': 'latest',
    }
    topic = 'your_topic'

    consumer = create_consumer(config, topic)
    
    try:
        latest_messages = consume_latest_messages(consumer, 10)
        for message in latest_messages:
            print(message)
    finally:
        consumer.close()
