from elasticsearch import Elasticsearch
import pandas as pd
from datetime import datetime, timedelta

# Elasticsearch settings
es = Elasticsearch([{'host': 'localhost', 'port': 9200}])

# Read the index names and retention periods from the input file
df = pd.read_csv('index_retention.csv', sep='|', names=['index_name', 'retention'])

# Get today's date
today = datetime.now().date()

# Get the date after the retention period for daily indices (days) and weekly indices (weeks)
df['retention_days'] = df['retention'].apply(lambda x: int(x[:-1]) if x[-1] == 'd' else 0)
df['retention_weeks'] = df['retention'].apply(lambda x: int(x[:-1]) if x[-1] == 'w' else 0)
df['retention_date'] = df.apply(lambda x: today - timedelta(days=x['retention_days']) if x['retention_days'] > 0 else today, axis=1)
df['retention_date'] = df.apply(lambda x: today - timedelta(weeks=x['retention_weeks']) if x['retention_weeks'] > 0 else x['retention_date'], axis=1)

# Filter the DataFrame to get daily and weekly indices that will cross the retention date by tomorrow
daily_indices = df[df['retention_days'] > 0]
weekly_indices = df[df['retention_weeks'] > 0]

daily_indices_to_delete = daily_indices[daily_indices['index_name'].apply(lambda x: datetime.strptime(x.split('-')[-1], '%Y-%m-%d').date()) <= today + timedelta(days=1)]
weekly_indices_to_delete = weekly_indices[weekly_indices['index_name'].apply(lambda x: datetime.strptime(x.split('-')[0] + '-' + x.split('-')[1], '%Y-%m-%d').date()) <= today + timedelta(weeks=1)]

# Get the size of each index in the list and the node details
def get_index_size(index_name):
    try:
        index_stats = es.indices.stats(index=index_name)
        index_size = index_stats['indices'][index_name]['total']['store']['size_in_bytes']
        return index_size
    except Exception as e:
        print(f"Error getting size for index {index_name}: {e}")
        return None

index_sizes_daily = {index_name: get_index_size(index_name) for index_name in daily_indices_to_delete['index_name']}
index_sizes_weekly = {index_name: get_index_size(index_name) for index_name in weekly_indices_to_delete['index_name']}

# Sort indices by size in ascending order
sorted_indices_daily = sorted(index_sizes_daily.items(), key=lambda x: x[1] if x[1] is not None else 0)
sorted_indices_weekly = sorted(index_sizes_weekly.items(), key=lambda x: x[1] if x[1] is not None else 0)

# Print the daily indices to delete
print("Daily Indices to Delete:")
for index_name, index_size in sorted_indices_daily:
    if index_size is not None:
        print(f"Index: {index_name}, Size: {index_size} bytes")

# Print the weekly indices to delete
print("\nWeekly Indices to Delete:")
for index_name, index_size in sorted_indices_weekly:
    if index_size is not None:
        print(f"Index: {index_name}, Size: {index_size} bytes")
